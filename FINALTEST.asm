PROCESSOR P16F876A
;--------------BANK1---------------
INDF		EQU		00H
TMR0		EQU		01H
PCL			EQU		02H
STATUS		EQU		03H
FSR			EQU		04H
PORTA		EQU		05H
PORTB		EQU		06H
PORTC		EQU		07H
EEDATA		EQU		08H
EEADR		EQU		09H
PCLATH		EQU		0AH
INTCON		EQU		0BH

;------------------------------------
OPTION_REG	EQU		81H		
TRISA		EQU		85H
TRISB		EQU		86H
TRISC		EQU		87H
EECON1		EQU		88H
EECON2		EQU		89H
ADCON1		EQU		9FH

;-------------VARIABLE------------
INT_CNT			EQU		20H ; INTERRUPT TIME
DISP_CNT		EQU		21H ; DISP SEQUENCE
DISP_1S			EQU		22H ; 1SEC
DISP_10S		EQU		23H ; 10SEC
DISP_1M			EQU		24H ; 1MIN
DISP_10M		EQU		25H ; 10MIN
DISP_1H			EQU		26H ; 1HOUR
DISP_10H		EQU		27H ; 10HOUR
W_TEMP			EQU		28H ; FOR INTERRUPT
STATUS_TEMP 	EQU 	29H ; FOR INTERRUPT
DBUF1			EQU		2AH ; DELAY
DBUF2			EQU		2BH ; DELAY
DBUF3			EQU		2CH ; DELAY
MODEL			EQU		2DH ; MODE CHECK
EXIT			EQU		2EH ; AFTER SET-UP
SF_CHECK		EQU 	2FH	; WHILE MODE00(HM,MS,MD,Y)
SF_CHECK2		EQU		30H ; SET-UP TIME, ALARM 
SET_ALARM		EQU		31H ; CHECK ALARM ON,OFF
A_DISP_1M		EQU 	32H ; ALARM 1M
A_DISP_10M		EQU		33H ; ALARM 10M
A_DISP_1H		EQU 	34H ; ALARM 1H
A_DISP_10H		EQU		35H ; ALARM 10H
DISP_1D			EQU		36H ; 1DAY
DISP_10D		EQU		37H ; 10DAY
DISP_1MO		EQU		38H ; 1MONTH
DISP_10MO		EQU		39H ; 10MONTH
DISP_1Y			EQU		3AH ; 1YEAR
DISP_10Y		EQU		3BH ; 10YEAR
DISP_G1			EQU		3CH ; GAME DIGIT
DISP_G2			EQU		3DH ; GAME DIGIT
DISP_G3			EQU		3EH ; GAME DIGIT
DISP_G4			EQU		3FH ; GAME DIGIT
STATE_G			EQU		40H ; GAME SEQUENCE

;---------STATUS REGISTER--------
IRP		EQU		7
RP1		EQU		6
RP0		EQU		5
NOT_TO	EQU		4
NOT_PD	EQU		3
ZF		EQU		2
C		EQU		1
CF		EQU		0
W		EQU		B'0'
F		EQU		.1

;-------------START-------------
ORG 0
GOTO START_SETUP

;------------INTERRUPT-----------
ORG 	4 ; BEGINNING OF ISR
MOVWF	W_TEMP
SWAPF	STATUS, W
MOVWF	STATUS_TEMP
MOVF	MODEL,W ; MODE CHECK
ANDLW	B'00000011'
ADDWF	PCL,F
GOTO	MODE0_DIS ; HM TIME
GOTO	MODE1_DIS ; SELECT TIME
GOTO	MODE2_DIS ; ALARM
GOTO 	MODE3_DIS ; SLOT GAME
	
BACK	SWAPF	STATUS_TEMP, W ; INTERRUPT SAVE
		MOVWF	STATUS
		SWAPF	W_TEMP, F
		SWAPF	W_TEMP, W
		BCF		INTCON, 2
		RETFIE

MODE0_DIS	MOVF	SF_CHECK,W
			ANDLW 	B'00000011'
			ADDWF	PCL,F
			GOTO	MODE_V0	; HM(00)
			GOTO	MODE_V1	; MS(01)
			GOTO	MODE_V2	; MD(10)
			GOTO	MODE_V3	; YEAR(11)
	
MODE1_DIS	BTFSC	SF_CHECK,1 ; WHEN HM,MS -> THEN SAME DISPLAY
			GOTO	MODE_V ; WHEN MD,YEAR -> THEN OTHER PATH	
			CALL	DISP_HM
			GOTO	BACK
			
MODE2_DIS	CALL	DISP_A ; ALARM SELECTION
			GOTO 	BACK

MODE3_DIS	CALL	DISP_G ; GAME
			GOTO	BACK
			
MODE_V		BTFSS	SF_CHECK,0 ; WHEN 10,11 COMES HERE, THEN CHECK BIT0
			GOTO	MODE_V2 ; MD DISPLAY
			GOTO	MODE_V3 ; YEAR DISPLAY
			
MODE_V0		CALL	DISP_HM ; HM DISPLAY SUB
			GOTO	BACK
			
MODE_V1		CALL	DISP_MS ; MS DISPLAY SUB
			GOTO	BACK
			
MODE_V2		CALL	DISP_MD	; MD DISPLAY SUB
			GOTO	BACK
			
MODE_V3		CALL 	DISP_YEAR ; YEAR DISPLAY SUB
			GOTO	BACK

;---------DISPLAY ROUTINE-------------
DISP_HM		INCF	DISP_CNT ; HM DISP SEQUENCE
			MOVF	DISP_CNT,W
			ANDLW	B'00000111'
			ADDWF	PCL,F
			GOTO	DISP4_HM
			GOTO	DISP1_HM
			GOTO	DISP2_HM
			GOTO	DISP3_HM
			GOTO	LED1 ; MODE1 -> LED1 CHECK. WHILE SELECTION, LED1 ON
			GOTO 	DISP_HM	;7 OPTIONS NEEDED
			GOTO	DISP_HM
			GOTO	DISP_HM	

DISP_MS		INCF	DISP_CNT ; MS DISP SEQUENCE
			MOVF	DISP_CNT,W
			ANDLW	B'00000111'	
		    ADDWF	PCL,F
			GOTO	DISP4_MS
			GOTO	DISP1_MS
			GOTO	DISP2_MS
			GOTO	DISP3_MS
			GOTO	LED0
			GOTO	DISP_MS 
			GOTO	DISP_MS
			GOTO	DISP_MS
			
DISP_MD		INCF	DISP_CNT ; MD DISP SEQUENCE
			MOVF	DISP_CNT,W
			ANDLW	B'00000111'
			ADDWF	PCL,F
			GOTO	DISP4_MD
			GOTO	DISP1_MD
			GOTO	DISP2_MD
			GOTO	DISP3_MD
			GOTO	LED0
			GOTO 	DISP_MD	
			GOTO	DISP_MD
			GOTO	DISP_MD	
			
DISP_YEAR	INCF	DISP_CNT ; YEAR DISP SEQUENCE
			MOVF	DISP_CNT,W
			ANDLW	B'00000111'
			ADDWF	PCL,F
			GOTO	DISP4_YEAR
			GOTO	DISP1_YEAR
			GOTO	DISP2_YEAR
			GOTO	DISP3_YEAR
			GOTO	LED0
			GOTO 	DISP_YEAR
			GOTO	DISP_YEAR
			GOTO	DISP_YEAR
			
;-----ALARM DISPLAY-----------------
DISP_A		INCF	DISP_CNT ; ALARM DISP SEQUENCE
			MOVF	DISP_CNT,W
			ANDLW	B'00000111'
			ADDWF	PCL,F
			GOTO	DISP4_A
			GOTO	DISP1_A
			GOTO	DISP2_A
			GOTO	DISP3_A	
			GOTO	LED2 ; MODE2 -> LED2 ON
			GOTO	DISP_A
			GOTO	DISP_A
			GOTO	DISP_A
			
;--------GAME DISPLAY-----------------
DISP_G		INCF	DISP_CNT ; GAME DISP SEQUENCE
			MOVF	DISP_CNT,W
			ANDLW	B'00000111'
			ADDWF	PCL,F
			GOTO	DISP4_G
			GOTO	DISP1_G
			GOTO	DISP2_G
			GOTO	DISP3_G	
			GOTO	LED3 ; MODE3 -> LED3 ON
			GOTO	DISP_G
			GOTO	DISP_G
			GOTO	DISP_G	
			
;----------LOOKUP TABLE-----------------
CONV		ANDLW	0FH	; A=RC7 B=RC6 C=RC5 D=RC1 E=RC0 F=RC2 G=RA1 DP=RA0
			ADDWF	PCL, F ; BLOCK TILL 255 LINES
			RETLW	B'11100111'	; '0'
			RETLW	B'01100000'	; '1'
			RETLW	B'11010011'	; '2'
			RETLW	B'11110010'	; '3'
			RETLW	B'01110100'	; '4'
			RETLW	B'10110110'	; '5'
			RETLW	B'10110111'	; '6'
			RETLW	B'11100000'	; '7'
			RETLW	B'11110111'	; '8'
			RETLW	B'11110110'	; '9'
			RETLW	B'11111101'	; '-'
			RETLW	B'11111111'	; ' '
			RETLW	B'11100101'	; 'C'
			RETLW	B'11111110'	; '.'
			RETLW	B'01100001'	; 'E'
			RETLW	B'01110001'	; 'F'
			
;------------MAIN PROGRAM---------------
START_SETUP	BSF 	STATUS, RP0 ; BANK 1
			MOVLW	B'00111000'	; SW1,SW2,SW3 INPUT
			MOVWF	TRISB
			MOVLW	B'00000000' ; ALL OUTPUT
			MOVWF	TRISA	 
			MOVLW	B'00000000' ; ALL OUTPUT
			MOVWF	TRISC
			MOVLW	B'00000111' ; DIGITAL I/O
			MOVWF	ADCON1
; INTERRUPT TIME SET-UP 2.048 msec
			MOVLW	B'00000010' ; 2.048 msec 1:8
			MOVWF	OPTION_REG ; OPTION_REG 7BIT 0, PULL UP
			BCF 	STATUS, RP0 ; BANK 0
			BSF 	INTCON, 5 ; TIMER INTERRUPT ENABLE
			BSF 	INTCON, 7 ; GLOBAL INTERRUPT ENABLE
			GOTO	INITIAL		

;-------INITIAL----------
INITIAL		CLRF	INT_CNT ; CLEAR INTERRUPT VARIABLE
			CLRF	DISP_CNT
			CLRF	DISP_1S ; SEC CLEAR
			CLRF	DISP_10S
			; INITIAL HM TIME(23:59)
			MOVLW	.9
			MOVWF	DISP_1M
			MOVLW	.5
			MOVWF	DISP_10M
			MOVLW	.3
			MOVWF	DISP_1H
			MOVLW	.2
			MOVWF	DISP_10H
			CLRF	MODEL ; MODE00
			MOVLW	.2
			MOVWF	EXIT ; INITIAL EXIT = 2
			CLRF	SF_CHECK2
			; INITIAL ALARM TIME(00:00)
			MOVLW	.0
			MOVWF	A_DISP_1M
			MOVLW	.0
			MOVWF	A_DISP_10M
			MOVLW	.0
			MOVWF	A_DISP_1H
			MOVLW	.0
			MOVWF	A_DISP_10H
			; INITIAL DAY(12.29)
			MOVLW	.9
			MOVWF	DISP_1D
			MOVLW	.2
			MOVWF	DISP_10D
			MOVLW	.2
			MOVWF	DISP_1MO
			MOVLW	.1
			MOVWF	DISP_10MO
			; INITIAL YEAR(2018)
			MOVLW	.8
			MOVWF	DISP_1Y
			MOVLW	.1
			MOVWF	DISP_10Y
			; CLEAR GAME DIGITS
			CLRF	DISP_G1
			CLRF	DISP_G2
			CLRF	DISP_G3
			CLRF	DISP_G4
			CLRF	STATE_G
			; DIGITS, BUZZER OFF
			BSF		PORTA,3	; DG1 OFF
			BSF		PORTA,2	; DG2 OFF
			BSF		PORTB,2	; DG3 OFF
			BSF		PORTB,1	; DG4 OFF
			BSF		PORTA,4 ; BUZZER OFF
			BCF		PORTB,7 ; J1-4 CLEAR, USING 7-SEG

;----------------MODE SELECT--------------
XLOOP 		CALL	A_CHECK ; CHECK TIME WITH ALARM
			BTFSC	MODEL,1 ; MODE 00,01 PASS
			GOTO	SW1 ; OTHERWISE SW1			
			BTFSC	MODEL,0 ; MODE 00 PASS
			GOTO	SW1 ; OTERWISE SW1
; WHEN MODE=00, HM/MS/MD/YEAR
			BTFSS   PORTB,4	; IF SW2 NOT PUSHED PASS
			GOTO	SW2 ; MS
			
SW1			BTFSC	PORTB,3	; MODE SELECT BUTTON
			GOTO	SELECT ; IF SW1 NOT PUSHED
			INCF	MODEL ; IF SW1 PUSHED
			CALL	DELAY_250MS ; SWITCH TIME
			GOTO	SELECT

SW2			INCF 	SF_CHECK,W
			ANDLW 	B'00000011'
			MOVWF	SF_CHECK ; LAST 2 BITS
			CALL	DELAY_250MS
			GOTO	M_LOOP
		
SELECT		MOVF	MODEL,W ; CHECKING MODE
			ANDLW	B'00000011'
			ADDWF	PCL,F
			GOTO	M_LOOP ; MODE0 : TIMER
			GOTO	MODE1 ; MODE1 : TIME SETUP
			GOTO 	MODE2 ; MODE2 : ALARM SETUP
			GOTO	MODE3 ; MODE3 : GAME

MODE_VV		BTFSS	SF_CHECK,0 ; WHEN MODE01
			GOTO	MODE4 ; WHEN MD DISP
			GOTO	MODE5 ; WHEN YEAR DISP
			
;----------TIME FLOWING PART---------------
M_LOOP		MOVLW 	.98	; FOR 1SEC 98*2.048*0.001*5=1.00S
			SUBWF 	INT_CNT, W
			BTFSS 	STATUS, ZF
			GOTO 	XLOOP ; INT_CONT=98 PASS
; ENTERING EVERY 1SEC
CK_LOOP		CLRF 	INT_CNT ; FOR NEXT 1SEC
			INCF 	DISP_1S ; 1SEC CHANGE
			MOVLW 	.10
			SUBWF 	DISP_1S, W ; 10SEC, 9->0			
			BTFSS 	STATUS, ZF
			GOTO 	XLOOP
; ENTERING EVERY 10SEC
			CLRF	DISP_1S ; 1SEC RESET
			INCF 	DISP_10S ; 10SEC CHANGE
			MOVLW 	.6
			SUBWF 	DISP_10S, W ; 60SEC, 6->0
			BTFSS 	STATUS, ZF
			GOTO 	XLOOP
			CLRF 	DISP_10S ; 10SEC RESET
			INCF	DISP_1M ; 1MIN CHANGE
			MOVLW	.10
			SUBWF	DISP_1M,W ; 10MIN, 9->0
			BTFSS	STATUS,ZF
			GOTO	XLOOP
			CLRF 	DISP_1M ; 1MIN RESET
			INCF	DISP_10M ; 10MIN CHANGE
			MOVLW	.6
			SUBWF	DISP_10M,W ; 60MIN, 6->0
			BTFSS	STATUS,ZF
			GOTO	XLOOP
			CLRF	DISP_10M ; 10MIN RESET	
			INCF	DISP_1H ; 1H CHANGE
			MOVLW	.4 ; 04,14,24 CHECK
			SUBWF	DISP_1H,W
			BTFSS	STATUS,ZF
			GOTO	CHECK_24H ; IF NOT 1H=4
			MOVLW	.2 ; 24H, THEN ALL CLEAR
			SUBWF	DISP_10H,W ; OTHERWISE GOTO JUMP
			BTFSC	STATUS,ZF
			GOTO	MDLOOP ; AFTER 24H
			
CHECK_24H	MOVLW	.10 ; EXCEPT 24H, INCREASE 1H CHANGE
			SUBWF	DISP_1H ; IF 10H, 9->0
			BTFSS	STATUS,ZF
			GOTO	XLOOP
			CLRF	DISP_1H ; 1H RESET
			INCF	DISP_10H ; 10H CHANGE	
			GOTO	XLOOP
; MD SEQUENCE. FOR MONTH 12 CLEAR. FOR DAY 30 CLEAR.
MDLOOP	    CLRF	DISP_1H
			CLRF	DISP_10H
			INCF 	DISP_1D 
			MOVLW 	.10
			SUBWF 	DISP_1D, W 
			BTFSS 	STATUS, ZF
			GOTO 	XLOOP
			CLRF 	DISP_1D 
			INCF	DISP_10D 
			MOVLW	.3
			SUBWF	DISP_10D,W 
			BTFSS	STATUS,ZF
			GOTO	XLOOP
			CLRF 	DISP_10D 			
			INCF	DISP_1MO
			MOVLW	.3
			SUBWF	DISP_1MO,W
			BTFSS	STATUS,ZF
			GOTO	CHECK_12MO
			MOVLW	.1 
			SUBWF	DISP_10MO,W 
			BTFSC	STATUS,ZF
			GOTO	YEARLOOP
			
CHECK_12MO	MOVLW	.10 
			SUBWF	DISP_1MO 
			BTFSS	STATUS,ZF
			GOTO	XLOOP
			CLRF	DISP_1MO
			INCF	DISP_10MO 
			GOTO	XLOOP
; YEAR SEQUENCE. FOR YEAR FIRST 20 NOT CHANGE. LAST 00~99 CHANGE. 			
YEARLOOP	MOVLW	.1
			MOVWF	DISP_1D
			MOVWF	DISP_1MO
			CLRF	DISP_10MO
			INCF 	DISP_1Y 
			MOVLW 	.10
			SUBWF 	DISP_1Y, W 
			BTFSS 	STATUS, ZF
			GOTO 	XLOOP
			CLRF 	DISP_1Y 
			INCF	DISP_10Y 
			MOVLW	.10
			SUBWF	DISP_10Y,W 
			BTFSS	STATUS,ZF
			GOTO	XLOOP
			GOTO	CLEAR
			
;------------MODE1(TIME SELECTION)--------------
MODE1		BTFSC	SF_CHECK,1 ; IF MD OR YEAR DISP, MODE_VV
			GOTO	MODE_VV	
			BTFSS	PORTB,4	; IF SW2 PUSHED, INC_NUM
			CALL	INC_NUM	; INCREASE NUMBER
			BTFSS	PORTB,5	; IF SW3 PUSHED, CHANGE_PART
			CALL	CHANGE_S ; CHECKING EXIT OR NOT
			GOTO	M_LOOP	

INC_NUM		CALL	DELAY_250MS
			BTFSS	SF_CHECK2,0
			GOTO	INC_HOUR ; SF_CHECK2=0	
			GOTO	INC_MIN ; SF_CHECK2=1
		
INC_HOUR	INCF	DISP_1H ; 1H INCREASE
			MOVLW	.4 ; 04,14,24 CHECK
			SUBWF	DISP_1H,W
			BTFSS	STATUS,ZF
			GOTO	CHECK_24H_S ; IF NOT 1H=4, CONTINUE
			MOVLW	.2 ; 24H, THEN ALL CLEAR
			SUBWF	DISP_10H,W ; OTHERWISE GOTO CHECK_24H_S
			BTFSC	STATUS,ZF
			GOTO	CLEAR

CHECK_24H_S	MOVLW	.10 ; EXCEPT 24H, INCREASE 1H CHANGE
			SUBWF	DISP_1H,W ; IF 10H, 9->0
			BTFSS	STATUS,ZF
			RETURN
			CLRF	DISP_1H ; 1H RESET
			INCF	DISP_10H ; 10H CHANGE
			RETURN
	
INC_MIN		INCF	DISP_1M ; 1M INCREASE
			MOVLW	.10 ; 10 -> 0
			SUBWF	DISP_1M,W
			BTFSS	STATUS,ZF
			RETURN	
			CLRF	DISP_1M ; 1M RESET
			INCF	DISP_10M ; 10M CHANGE
			MOVLW	.6 ; 6 -> 0
			SUBWF	DISP_10M,W
			BTFSC	STATUS,ZF
			CLRF	DISP_10M
			RETURN

CHANGE_S	CALL	DELAY_250MS
			INCF	SF_CHECK2 ; PART CHANGE, FLAG2=0 TEHN H, =1 THEN M
			DECF	EXIT ; EXIT=2, IF FLAG2=2; FINAL_SETUP
			MOVLW	.0 ; SW3 PUSHED TWICE, THEN INITIAL
			SUBWF	EXIT,W
			BTFSC	STATUS,ZF
			GOTO	FINAL_S
			RETURN
	
FINAL_S		MOVLW	.2
			MOVWF	EXIT
			CLRF	MODEL ; MODE00
			CLRF	SF_CHECK
			GOTO	M_LOOP

;-----------MODE2(ALARM SELECTION)--------------
MODE2		BCF	    SET_ALARM,0 ; ALARM CLEAR
			BTFSS	PORTB,4	; SW2
			CALL	INC_NUM_A	
			BTFSS	PORTB,5	; SW3
			CALL	CHANGE_A
			GOTO	M_LOOP

INC_NUM_A	CALL	DELAY_250MS
			BTFSS	SF_CHECK2,0
			GOTO	INC_HOUR_A ; SF_CHECK2=0	
			GOTO	INC_MIN_A ; SF_CHECK2=1
		
INC_HOUR_A	INCF	A_DISP_1H
			MOVLW	.4 ; CHECK 4H
			SUBWF	A_DISP_1H,W
			BTFSS	STATUS,ZF
			GOTO	CHECK_24H_A
			MOVLW	.2 ; CHECK 20H
			SUBWF	A_DISP_10H,W
			BTFSC	STATUS,ZF
			GOTO	CLEAR_A

CHECK_24H_A	MOVLW	.10
			SUBWF	A_DISP_1H,W
			BTFSS	STATUS,ZF
			RETURN
			CLRF	A_DISP_1H
			INCF	A_DISP_10H
			RETURN

INC_MIN_A	INCF	A_DISP_1M
			MOVLW	.10 ; CHECK 10M
			SUBWF	A_DISP_1M,W
			BTFSS	STATUS,ZF
			RETURN	
			CLRF	A_DISP_1M
			INCF	A_DISP_10M
			MOVLW	.6 ; CHECK 60M
			SUBWF	A_DISP_10M,W
			BTFSC	STATUS,ZF
			CLRF	A_DISP_10M
			RETURN

CHANGE_A	CALL	DELAY_250MS
			INCF	SF_CHECK2
			DECF	EXIT
			MOVLW	.0
			SUBWF	EXIT,W
			BTFSC	STATUS,ZF
			GOTO	FINAL_A
			RETURN

FINAL_A		MOVLW	.2
			MOVWF	EXIT
			CLRF	MODEL
			CLRF	SF_CHECK2
			BSF		SET_ALARM,0
			GOTO	M_LOOP
		
CLEAR_A		CLRF	A_DISP_10H
			CLRF	A_DISP_1H
			RETURN
			
;------------MODE3(GAME MODE)--------------
MODE3		BTFSS	PORTB,4 ; SW2
			CALL	INCSTATE	
			MOVLW	.1
			SUBWF	STATE_G,W
			BTFSC	STATUS,ZF	
			GOTO	START_G	; IF STATE_G=1
			MOVLW	.2
			SUBWF	STATE_G,W
			BTFSC	STATUS,ZF	
			GOTO	START_G1 ; IF STATE_G=2
			MOVLW	.3
			SUBWF	STATE_G,W
			BTFSC	STATUS,ZF	
			GOTO	START_G2 ; IF STATE_G=3
			MOVLW	.4
			SUBWF	STATE_G,W
			BTFSC	STATUS,ZF	
			GOTO	START_G3 ; IF STATE_G=4
			MOVLW	.5
			SUBWF	STATE_G,W
			BTFSC	STATUS,ZF
			GOTO	CHECKNUM ; IF STATE_G=5 CHECK NUM
			GOTO	RESTART

INCSTATE	CALL	DELAY_250MS
			INCF	STATE_G
			RETURN

CHECKNUM	CALL	DELAY_250MS 
			MOVF	DISP_G1,W ; ALL NUM SAME => BUZZERON
			SUBWF	DISP_G2,W
			BTFSS	STATUS,ZF
			GOTO	M_LOOP
			MOVF	DISP_G2,W
			SUBWF 	DISP_G3,W
			BTFSS	STATUS,ZF
			GOTO	M_LOOP
			MOVF	DISP_G3,W
			SUBWF 	DISP_G4,W
			BTFSC	STATUS,ZF
			BCF		PORTA,4 ; BUZZER ON
			GOTO	M_LOOP
		
			
START_G		BTFSC	INT_CNT,4 ; FOR XXX0XXXX INTERRUPT
			INCF	DISP_G1 ; DG1 NUMBER INCREASE
			MOVLW	.2
			SUBWF	DISP_G1,W ; 2 THEN CLEAR
			BTFSC 	STATUS,ZF
			CLRF	DISP_G1
			
START_G1	BTFSC	INT_CNT,3 ; FOR XXXX0XXX INTERRUPT
			INCF	DISP_G2 ; DG2 NUMBER INCREASE
			MOVLW	.2
			SUBWF	DISP_G2,W
			BTFSC 	STATUS,ZF
			CLRF	DISP_G2
			
START_G2	BTFSC	INT_CNT,2 ; FOR XXXXX0XX INTERRUPT
			INCF	DISP_G3 ; DG3 NUMBER INCREASE
			MOVLW	.2 
			SUBWF	DISP_G3,W
			BTFSC 	STATUS,ZF
			CLRF	DISP_G3
			
START_G3	BTFSC	INT_CNT,1 ; FOR XXXXXX0X INTERRUPT
			INCF	DISP_G4 ; DG4 NUMBER INCREASE
			MOVLW	.2
			SUBWF	DISP_G4,W
			BTFSC 	STATUS,ZF
			CLRF	DISP_G4
			GOTO	M_LOOP
; CLEAR GAME VARIABLES			
RESTART		BSF		PORTA,4
			CLRF	STATE_G
			CLRF	DISP_G1
			CLRF	DISP_G2
			CLRF	DISP_G3
			CLRF	DISP_G4
			CALL	DELAY_250MS
			GOTO	M_LOOP			
			
;------------MODE4(MD SELECTION)--------------
MODE4		BTFSS	PORTB,4	; IF SW2 PUSHED, INC_NUM_MD
			CALL	INC_NUM_MD	; INCREASE NUMBER
			BTFSS	PORTB,5	; IF SW3 PUSHED, CHANGE_MDS
			CALL	CHANGE_MDS ; CHECKING EXIT OR NOT
			GOTO	M_LOOP	

INC_NUM_MD	CALL	DELAY_250MS
			BTFSS	SF_CHECK2,0
			GOTO	INC_MONTH ; SF_CHECK2=0	
			GOTO	INC_DAY ; SF_CHECK2=1
		
INC_MONTH	INCF	DISP_1MO ; 1MO INCREASE
			MOVLW	.3 ; 
			SUBWF	DISP_1MO,W
			BTFSS	STATUS,ZF
			GOTO	CHECK_12MO_S ; IF NOT 12MONTH, CONTINUE
			MOVLW	.1 ; 12MO, THEN ALL CLEAR
			SUBWF	DISP_10MO,W ; OTHERWISE GOTO CHECK_12MO_S
			BTFSC	STATUS,ZF
			GOTO	CLEAR

CHECK_12MO_S	MOVLW	.10 ; EXCEPT 12MO, INCREASE 1MO CHANGE
				SUBWF	DISP_1MO,W ; IF 10MO, 9->0
				BTFSS	STATUS,ZF
				RETURN
				CLRF	DISP_1MO ; 1MO RESET
				INCF	DISP_10MO ; 10MO CHANGE
				RETURN
	
INC_DAY		INCF	DISP_1D ; 1D INCREASE
			MOVLW	.10 ; 10 -> 0
			SUBWF	DISP_1D,W
			BTFSS	STATUS,ZF
			RETURN	
			CLRF	DISP_1D ; 1D RESET
			INCF	DISP_10D ; 10D CHANGE
			MOVLW	.3 ; 3 -> 0
			SUBWF	DISP_10D,W
			BTFSC	STATUS,ZF
			CLRF	DISP_10D
			RETURN

CHANGE_MDS	CALL	DELAY_250MS
			INCF	SF_CHECK2 ; PART CHANGE, SF_CHECK2=0 TEHN MO, =1 THEN D
			DECF	EXIT ; EXIT=2, IF SF_CHECK2=2; FINAL_MDS
			MOVLW	.0 ; SW3 PUSHED TWICE, THEN INITIAL
			SUBWF	EXIT,W
			BTFSC	STATUS,ZF
			GOTO	FINAL_MDS
			RETURN
	
FINAL_MDS	MOVLW	.2
			MOVWF	EXIT
			CLRF	MODEL ; MODE00
			MOVLW	.2
			MOVWF 	SF_CHECK ; BACK TO MD DISP
			GOTO	M_LOOP
			
;------------MODE5(YEAR SELECTION)--------------
MODE5		BTFSS	PORTB,4	; IF SW2 PUSHED, INC_NUM_Y
			CALL	INC_NUM_Y	; INCREASE NUMBER
			BTFSS	PORTB,5	; IF SW3 PUSHED, CHANGE_YS
			CALL	CHANGE_YS ; CHECKING EXIT OR NOT
			GOTO	M_LOOP	

INC_NUM_Y	CALL	DELAY_250MS
			INCF	DISP_1Y ; 1Y INCREASE
			MOVLW	.10
			SUBWF	DISP_1Y,W
			BTFSS	STATUS,ZF
			RETURN
			CLRF	DISP_1Y
			INCF	DISP_10Y
			MOVLW	.10
			SUBWF	DISP_10Y,W
			BTFSC	STATUS,ZF
			CLRF	DISP_10Y
			RETURN

CHANGE_YS	CALL	DELAY_250MS
			INCF	SF_CHECK2
			DECF	EXIT ; EXIT=2, IF SF_CHECK2=2; FINAL_YS
			MOVLW	.1 ; SW3 PUSHED ONCE, THEN INITIAL
			SUBWF	EXIT,W
			BTFSC	STATUS,ZF
			GOTO	FINAL_YS
			RETURN
	
FINAL_YS	MOVLW	.2
			MOVWF	EXIT
			CLRF	SF_CHECK2
			CLRF	MODEL ; MODE00
			MOVLW	.3
			MOVWF	SF_CHECK ; BACK TO Y DISP
			GOTO	M_LOOP

;--------------ALARM CHECK-----------------
A_CHECK		BTFSS	PORTB,5	; SW3
			GOTO	BUZZOFF ; IF SW3 PUSHED BUZZOFF
			BTFSS	SET_ALARM,0	; IS ALARM ON?
			RETURN ; NO
			MOVF	DISP_10H,W ; YES
			SUBWF	A_DISP_10H,W ; COMPARE 10H
			BTFSS	STATUS,ZF
			RETURN
			MOVF	DISP_1H,W ; COMPARE 1H
			SUBWF	A_DISP_1H,W
			BTFSS	STATUS,ZF
			RETURN
			MOVF	A_DISP_10M,W ; COMPARE 10M
			SUBWF	A_DISP_10M,W
			BTFSS	STATUS,ZF
			RETURN
			MOVF	DISP_1M,W ; COMPARE 1M
			SUBWF	A_DISP_1M,W
			BTFSS	STATUS,ZF
			RETURN	
			MOVLW	.1 ; OFF AFTER 20S
			SUBWF	DISP_10S,W	
			BTFSC	STATUS,ZF
			GOTO	BUZZOFF	; BUZZER OFF AFTER 20S
			BCF		PORTA,4 ; BUZZER ON
			RETURN

BUZZOFF		BSF		PORTA,4
			CLRF	SET_ALARM
			RETURN

;----------DELAY------------	
DELAY_250MS MOVLW	.50
			MOVWF	DBUF1

LP4			MOVLW	.50
			MOVWF	DBUF2

LP5			MOVLW	.24
			MOVWF	DBUF3

LP6			NOP
			DECFSZ	DBUF3, F
			GOTO	LP6
			DECFSZ	DBUF2, F
			GOTO	LP5
			DECFSZ	DBUF1, F
			GOTO	LP4
			RETURN
			
;----------------REG_CREAR-----------------	
CLEAR		CLRF	DISP_1H ; FOR ALL CLEARING
			CLRF	DISP_10H
			CLRF	DISP_1M
			CLRF	DISP_10M
			CLRF	DISP_1S
			CLRF	DISP_10S
			MOVLW	.1
			MOVWF	DISP_1D
			MOVWF	DISP_1MO
			CLRF	DISP_10D
			CLRF	DISP_10MO
			CLRF	DISP_1Y
			CLRF	DISP_10Y
			CLRF	INT_CNT
			GOTO	M_LOOP
;-------------HM TIME DISP----------------
DISP1_HM	BTFSS	MODEL,0 ; ?
			GOTO	CHECK1 ; ?
			BTFSC	SF_CHECK2,0 ; FLAG2 00 10 PASS
			GOTO	CHECK1 ; FLAG2 01 11
			CALL	DIGIT_CLEAR
			BTFSC	INT_CNT,6 ; TIME CHECK
			RETURN

CHECK1		CALL	DIGIT_CLEAR
			BCF		PORTA,0	; SEGMENT DOT OFF
			BCF		PORTA,1	; SEGMENT - OFF
			MOVF	DISP_10H, W ; DG1
			CALL	CONV
			MOVWF	PORTC
			BTFSC	PORTC,4 ; IF CONV G=1
			BSF		PORTA,1	; THEN RA1=1 ON	
			BCF		PORTA,3 ; DG1 ON7
			RETURN
		
DISP2_HM	BTFSS	MODEL,0
			GOTO	CHECK2
			BTFSC	SF_CHECK2,0
			GOTO	CHECK2
			CALL	DIGIT_CLEAR
			BTFSC	INT_CNT,6
			RETURN

CHECK2		CALL	DIGIT_CLEAR
			BCF		PORTA,1	; SEGMENT - OFF
			MOVF	DISP_1H, W ; DG2
			CALL	CONV
			MOVWF	PORTC
			BTFSC	PORTC,4 ; IF CONV G=1
			BSF		PORTA,1	; THEN RA1=1 ON	
			BTFSC	INT_CNT,6 ;INT_CNT=64~98 DOT ON
			BSF		PORTA,0 ; SEGMENT DOT ON
			BCF		PORTA,2	; DG2 ON
			RETURN

DISP3_HM	BTFSS	MODEL,0
			GOTO	CHECK3
			BTFSS	SF_CHECK2,0
			GOTO	CHECK3
			CALL	DIGIT_CLEAR
			BTFSC	INT_CNT,6
			RETURN
			
CHECK3		CALL	DIGIT_CLEAR
			BCF		PORTA,1	; SEGMENT - OFF
			BCF		PORTA,0 ; SEGMENT DOT OFF
			MOVF	DISP_10M, W ; DG3
			CALL	CONV
			MOVWF	PORTC
			BTFSC	PORTC,4 ; IF CONV G=1
			BSF		PORTA,1 ; RA1 ON
			BCF		PORTB,2	; DG3 ON
			RETURN

DISP4_HM	BCF		PORTB,7 ; USING 7-SEG. START
			BTFSS	MODEL,0
			GOTO	CHECK4
			BTFSS	SF_CHECK2,0
			GOTO	CHECK4
			CALL	DIGIT_CLEAR
			BTFSC	INT_CNT,6
			GOTO	INC_INT

CHECK4		CALL	DIGIT_CLEAR
			BCF		PORTA,0
			BCF		PORTA,1 ; SEGMENT DOT OFF
			MOVF	DISP_1M, W
			CALL	CONV
			MOVWF	PORTC
			BTFSC	PORTC,4
			BSF		PORTA,1
			BCF		PORTB,1	; DG4 ON

INC_INT		INCF	INT_CNT ; DISP 4,1,2,3 SEQUENCE
			RETURN

;---------MS TIME DISP------------
DISP1_MS	CALL	DIGIT_CLEAR
			BCF		PORTA,0	; SEGEMENT DOT OFF
			BCF		PORTA,1
			MOVF	DISP_10M, W ; DG1
			CALL	CONV	
			MOVWF	PORTC	
			BTFSC	PORTC,4
			BSF		PORTA,1
			BCF		PORTA,3 ; DG1 ON
			RETURN
		
DISP2_MS	CALL	DIGIT_CLEAR
			BCF		PORTA,0	; SEGEMENT DOT OFF
			BCF		PORTA,1
			MOVF	DISP_1M, W
			CALL	CONV	
			MOVWF	PORTC	
			BTFSC	PORTC,4
			BSF		PORTA,1
			BTFSC	INT_CNT,6
			BSF		PORTA,0 ; SEGEMENT DOT ON
			BCF		PORTA,2	; DG2 ON
			RETURN

DISP3_MS	CALL	DIGIT_CLEAR
			BCF		PORTA,1	; SEGEMENT DOT OFF 
			BCF		PORTA,0
			MOVF	DISP_10S, W
			CALL	CONV	
			MOVWF	PORTC	
			BTFSC	PORTC,4
			BSF		PORTA,1	; SEGEMENT DOT ON
			BCF		PORTB,2	; DG3 ON
			RETURN

DISP4_MS	CALL 	DIGIT_CLEAR
			BCF		PORTB,7 ; START USING 7-SEG
			BCF		PORTA,0
			BCF		PORTA,1	; SEGEMENT DOT OFF
			MOVF	DISP_1S, W
			CALL	CONV		
			MOVWF	PORTC		
			BTFSC	PORTC,4
			BSF		PORTA,1	; SEGEMENT DOT ON
			BCF		PORTB,1	; DG4 ON
			INCF	INT_CNT
			RETURN
			
;------------MD TIME DISP------------
DISP1_MD	BTFSS	MODEL,0 ; ?
			GOTO	CHECK_MD1 ; ?
			BTFSC	SF_CHECK2,0 ; SF_CHECK2 00 10 PASS
			GOTO	CHECK_MD1 ; SF_CHECK2 01 11
			CALL	DIGIT_CLEAR
			BTFSC	INT_CNT,6 ; TIME CHECK
			RETURN

CHECK_MD1	CALL	DIGIT_CLEAR
			BCF		PORTA,0	; SEGMENT DOT OFF
			BCF		PORTA,1	; SEGMENT - OFF
			MOVF	DISP_10MO, W ; DG1
			CALL	CONV
			MOVWF	PORTC
			BTFSC	PORTC,4 ; IF CONV G=1
			BSF		PORTA,1	; THEN RA1=1 ON	
			BCF		PORTA,3 ; DG1 ON
			RETURN
		
DISP2_MD	BTFSS	MODEL,0
			GOTO	CHECK_MD2
			BTFSC	SF_CHECK2,0
			GOTO	CHECK_MD2
			CALL	DIGIT_CLEAR
			BTFSC	INT_CNT,6
			RETURN

CHECK_MD2	CALL	DIGIT_CLEAR
			BCF		PORTA,1	; SEGMENT - OFF
			MOVF	DISP_1MO, W ; DG2
			CALL	CONV
			MOVWF	PORTC
			BTFSC	PORTC,4 ; IF CONV G=1
			BSF		PORTA,1	; THEN RA1=1 ON	
			BTFSC	INT_CNT,6 ;INT_CNT=64~98 DOT ON
			BSF		PORTA,0 ; SEGMENT DOT ON
			BCF		PORTA,2	; DG2 ON
			RETURN

DISP3_MD	BTFSS	MODEL,0
			GOTO	CHECK_MD3
			BTFSS	SF_CHECK2,0
			GOTO	CHECK_MD3
			CALL	DIGIT_CLEAR
			BTFSC	INT_CNT,6
			RETURN
			
CHECK_MD3	CALL	DIGIT_CLEAR
			BCF		PORTA,1	; SEGMENT - OFF
			BCF		PORTA,0 ; SEGMENT DOT OFF
			MOVF	DISP_10D, W ; DG3
			CALL	CONV
			MOVWF	PORTC
			BTFSC	PORTC,4 ; IF CONV G=1
			BSF		PORTA,1 ; RA1 ON
			BCF		PORTB,2	; DG3 ON
			RETURN

DISP4_MD	BCF		PORTB,7 ; USING 7-SEG. START
			BTFSS	MODEL,0
			GOTO	CHECK_MD4
			BTFSS	SF_CHECK2,0
			GOTO	CHECK_MD4
			CALL	DIGIT_CLEAR
			BTFSC	INT_CNT,6
			GOTO	INC_INT

CHECK_MD4	CALL	DIGIT_CLEAR
			BCF		PORTA,0
			BCF		PORTA,1 ; SEGMENT DOT OFF
			MOVF	DISP_1D, W
			CALL	CONV
			MOVWF	PORTC
			BTFSC	PORTC,4
			BSF		PORTA,1
			BCF		PORTB,1	; DG4 ON
			INCF	INT_CNT ; DISP 4,1,2,3 SEQUENCE
			RETURN
			
;------------YEAR TIME DISP----------------
DISP1_YEAR	CALL	DIGIT_CLEAR
			BCF		PORTA,0	; SEGMENT DOT OFF
			BCF		PORTA,1	; SEGMENT - OFF
			MOVLW	.2
			CALL	CONV
			MOVWF	PORTC
			BTFSC	PORTC,4 ; IF CONV G=1
			BSF		PORTA,1	; THEN RA1=1 ON	
			BCF		PORTA,3 ; DG1 ON
			RETURN
		
DISP2_YEAR	CALL	DIGIT_CLEAR
			BCF		PORTA,1	; SEGMENT - OFF
			MOVLW	.0
			CALL	CONV
			MOVWF	PORTC
			BTFSC	PORTC,4 ; IF CONV G=1
			BSF		PORTA,1	; THEN RA1=1 ON	
			BCF		PORTA,2	; DG2 ON
			RETURN

DISP3_YEAR	BTFSS	MODEL,0
			GOTO	CHECK_Y3
			BTFSC	SF_CHECK2,0
			GOTO	CHECK_Y3
			CALL	DIGIT_CLEAR
			BTFSC	INT_CNT,6
			RETURN
			
CHECK_Y3	CALL	DIGIT_CLEAR
			BCF		PORTA,1	; SEGMENT - OFF
			BCF		PORTA,0 ; SEGMENT DOT OFF
			MOVF	DISP_10Y, W ; DG3
			CALL	CONV
			MOVWF	PORTC
			BTFSC	PORTC,4 ; IF CONV G=1
			BSF		PORTA,1 ; RA1 ON
			BCF		PORTB,2	; DG3 ON
			RETURN

DISP4_YEAR	BCF		PORTB,7 ; USING 7-SEG. START
			BTFSS	MODEL,0
			GOTO	CHECK_Y4
			BTFSC	SF_CHECK2,0
			GOTO	CHECK_Y4
			CALL	DIGIT_CLEAR
			BTFSC	INT_CNT,6
			GOTO	INC_INT

CHECK_Y4	CALL	DIGIT_CLEAR
			BCF		PORTA,0
			BCF		PORTA,1 ; SEGMENT DOT OFF
			MOVF	DISP_1Y, W
			CALL	CONV
			MOVWF	PORTC
			BTFSC	PORTC,4
			BSF		PORTA,1
			BTFSC	INT_CNT,6 ;INT_CNT=64~98 DOT ON
			BSF		PORTA,0 ; SEGMENT DOT ON
			BCF		PORTB,1	; DG4 ON
			INCF	INT_CNT ; DISP 4,1,2,3 SEQUENCE
			RETURN
			
;------------ARLAM DISP------------------------
DISP1_A		BTFSC	SF_CHECK2,0 ; SF_CHECK2 = 00 10 PASS FIRST 2 BITS
			GOTO	CHECK_A1 ; SF_CHECK2 = 10,11 LAST 2 BITS
			CALL	DIGIT_CLEAR	; SF_CHECK=0(H SELECT)
			BTFSC	INT_CNT,6
			RETURN

CHECK_A1	CALL 	DIGIT_CLEAR
			BCF		PORTA,0 ; DP OFF
			BCF		PORTA,1 ; - OFF
			MOVF	A_DISP_10H, W
			CALL	CONV		
			MOVWF	PORTC
			BTFSC	PORTC,4 ; CHECK -
			BSF		PORTA,1
			BCF		PORTA,3 ; DG1
			RETURN

DISP2_A 	BTFSC	SF_CHECK2,0
			GOTO	CHECK_A2
			CALL	DIGIT_CLEAR
			BTFSC	INT_CNT,6
			RETURN

CHECK_A2	CALL 	DIGIT_CLEAR
			BCF		PORTA,0
			BCF		PORTA,1
			MOVF	A_DISP_1H, W
			CALL	CONV
			MOVWF	PORTC
			BTFSC	PORTC,4
			BSF		PORTA,1	
			BTFSC	INT_CNT,6
			BSF		PORTA,0	; DOT ON FOR INT_CNT = X1XX XXXX
			BCF		PORTA,2 ; DG2
			RETURN

DISP3_A		BTFSS	SF_CHECK2,0
			GOTO	CHECK_A3
			CALL	DIGIT_CLEAR
			BTFSC	INT_CNT,6
			RETURN

CHECK_A3	CALL	DIGIT_CLEAR
			BCF		PORTA,0
			BCF		PORTA,1
			MOVF	A_DISP_10M, W
			CALL	CONV	
			MOVWF	PORTC	
			BTFSC	PORTC,4
			BSF		PORTA,1
			BCF		PORTB,2	; DG3
			RETURN

DISP4_A		BCF		PORTB,7 ; USING 7-SEG
			BTFSS	SF_CHECK2,0
			GOTO	CHECK_A4
			CALL	DIGIT_CLEAR
			BTFSC	INT_CNT,6
			GOTO	INC_INT ; INCREASE INTERRUPT

CHECK_A4	CALL	DIGIT_CLEAR
			BCF		PORTA,0
			BCF		PORTA,1	
			MOVF	A_DISP_1M, W
			CALL	CONV	
			MOVWF	PORTC	
			BTFSC	PORTC,4
			BSF		PORTA,1
			BCF		PORTB,1 ; DG4
			INCF	INT_CNT
			RETURN
			
;---------GAME DISP------------
DISP1_G		CALL	DIGIT_CLEAR
			BCF		PORTA,0	; SEGEMENT DOT OFF
			BCF		PORTA,1
			MOVF	DISP_G1, W ; DG1
			CALL	CONV	
			MOVWF	PORTC	
			BTFSC	PORTC,4
			BSF		PORTA,1
			BCF		PORTA,3 ; DG1 ON
			RETURN
		
DISP2_G		CALL	DIGIT_CLEAR
			BCF		PORTA,0	; SEGEMENT DOT OFF
			BCF		PORTA,1
			MOVF	DISP_G2, W
			CALL	CONV	
			MOVWF	PORTC	
			BTFSC	PORTC,4
			BSF		PORTA,1
			BCF		PORTA,2	; DG2 ON
			RETURN
	
DISP3_G		CALL	DIGIT_CLEAR
			BCF		PORTA,1	; SEGEMENT DOT OFF 
			BCF		PORTA,0
			MOVF	DISP_G3, W
			CALL	CONV	
			MOVWF	PORTC	
			BTFSC	PORTC,4
			BSF		PORTA,1	; SEGEMENT DOT ON
			BCF		PORTB,2	; DG3 ON
			RETURN

DISP4_G		CALL 	DIGIT_CLEAR
			BCF		PORTB,7 ; START USING 7-SEG
			BCF		PORTA,0
			BCF		PORTA,1	; SEGEMENT DOT OFF
			MOVF	DISP_G4, W
			CALL	CONV		
			MOVWF	PORTC		
			BTFSC	PORTC,4
			BSF		PORTA,1	; SEGEMENT DOT ON
			BCF		PORTB,1	; DG4 ON
			INCF	INT_CNT
			RETURN
			
;-----------SUB PROGRAM----------	
DIGIT_CLEAR	BSF		PORTB,1	; DIGIT OFF
			BSF		PORTB,2
			BSF		PORTA,2
			BSF		PORTA,3
			RETURN	
			
LED0		BSF		PORTB,2 ; LAST DG3, OFF TO DELAY
			BSF		PORTB,7
			BSF		PORTC,7
			BSF		PORTC,6
			BSF		PORTC,5
			RETURN

LED1		BSF		PORTB,2 ; MODEL = 00 OR 01
			BTFSS	MODEL,0 ; CHECK IF MODEL IS 01, THEN LED1 ON.
			RETURN
			BTFSC 	MODEL,1
			RETURN ; OTHERWISE LED1 OFF
			BSF		PORTB,7
			BCF		PORTC,7
			BSF		PORTC,6
			BSF		PORTC,5
			RETURN
			
LED2		BSF		PORTB,2 ; MODEL = 10
			BSF		PORTB,7
			BSF		PORTC,7
			BCF		PORTC,6
			BSF		PORTC,5
			RETURN
	
LED3		BSF		PORTB,2 ; MODEL = 11
			BSF		PORTB,7
			BSF		PORTC,7
			BSF		PORTC,6
			BCF		PORTC,5
			RETURN
			
END
			
			
	